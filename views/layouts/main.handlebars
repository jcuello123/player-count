<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/style.css">
    <title>Player Count</title>
</head>
<body>
    <div class="container text-center">
        <div class="chart-types my-3">
            <button onclick="pieChart()">Pie Chart</button>
            <button onclick="lineChart()">Line Chart</button>
            <button onclick="barChart()">Bar Chart</button>
            <button onclick="polarAreaChart()">Polar Area Chart</button>
        </div>

        <canvas class="mx-auto" id="myChart" style="max-width: 1000px;"></canvas>

    <script>
        const data = [];
        chartIt();

        async function getData(){
            const response = await fetch('/count');
            const playerCount = await response.json();
            for (game in playerCount){
                data.push(playerCount[game]);
            }
        }

        async function chartIt(chartType){
            if (data.length == 0) await getData();
            if (!chartType) chartType = 'bar';
            var ctx = document.getElementById('myChart').getContext('2d');
            Chart.defaults.global.defaultFontColor = 'white';
            var myChart = new Chart(ctx, {
                type: chartType,
                data: {
                    labels: ['Old School RuneScape', 'Grand Theft Auto V', 'PlayerUnknown\'s Battlegrounds', 'League of Legends', 'Fortnite', 'Minecraft'],
                    datasets: [{
                        label: '# of Players',
                        data: [data[0], data[1], data[2], data[3], data[4], data[5]],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }
        function pieChart(){
            resetCanvas()
            chartIt('pie');
        }
        
        function lineChart(){
            resetCanvas()
            chartIt('line');
        }

        function polarAreaChart(){
            resetCanvas()
            chartIt('polarArea');
        }

        function barChart(){
            resetCanvas()
            chartIt('bar');
        }

        function resetCanvas(){
            document.getElementById('myChart').remove();
            addCanvas();
        }

        function addCanvas(){
            const canvas = document.createElement('canvas');
            canvas.id = 'myChart';
            canvas.style.maxWidth = '1000px';
            canvas.style.margin = '0 auto';
            document.querySelector('body').appendChild(canvas);
        }
    </script>
</body>
    </div>
</html>